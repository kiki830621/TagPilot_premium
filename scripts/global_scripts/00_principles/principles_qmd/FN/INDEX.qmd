---
title: "WISER 函數總目錄"
subtitle: "Function Index and Documentation Hub"
author: "WISER Team"
date: "2025-07-16"
categories: ["Functions", "Documentation", "Index"]
---

# WISER 函數總目錄 {#sec-function-index}

此目錄包含所有 WISER 專案中的函數文檔，按照程式碼架構組織，便於快速查找和維護。

## 📋 目錄結構說明

本文檔系統採用與程式碼架構平行的結構：

```
scripts/global_scripts/XX_module/  ←→  FN/XX_module/
```

每個函數文檔都位於對應的模組資料夾中，並通過符號連結在原始模組中提供存取。

## 🗃️ 函數分類目錄

### 01_db - 資料庫建立與管理 {#sec-01-db}

**模組功能**: 資料庫連接、建立和基本管理

*（待建立函數文檔）*

### 02_db_utils - 資料庫工具函數 {#sec-02-db-utils}

**模組功能**: 資料庫操作的通用工具和輔助函數

#### 核心函數
- [**tbl2()**](./02_db_utils/FN_tbl2_enhanced_data_access.qmd) - 增強版數據表存取函數
  - 支援 attached database 語法 (`database.table`)
  - 向後相容 `dplyr::tbl()` 
  - 遵循原則：R091, R092
  - 位置：`scripts/global_scripts/02_db_utils/tbl2/fn_tbl2.R`

#### 待建立文檔
- `dbConnectDuckdb()` - DuckDB 連接函數
- `dbAttachDuckdb()` - DuckDB 附加函數
- `dbDetachDuckdb()` - DuckDB 分離函數
- `dbCopyTable()` - 表格複製函數
- `nrow2()` - 增強版行數統計

### 03_config - 配置管理 {#sec-03-config}

**模組功能**: 應用程式配置和環境設定

*（待建立函數文檔）*

### 04_utils - 通用工具函數 {#sec-04-utils}

**模組功能**: 字串處理、資料轉換、檔案操作等通用工具

#### 待建立文檔
- 字串處理工具
- 資料轉換函數
- 檔案操作函數

### 05_etl_utils - ETL 管線工具 {#sec-05-etl-utils}

**模組功能**: 資料提取、轉換和載入的專用工具

#### 待建立文檔
- ETL 管線核心函數
- 資料清理和轉換工具
- 批次處理函數

### 08_ai - AI 整合功能 {#sec-08-ai}

**模組功能**: OpenAI API 整合和 AI 驅動的資料處理

#### 待建立文檔
- `fn_process_property_ratings()` - 屬性評分處理函數
- OpenAI API 整合函數
- AI 文本分析工具

### 10_rshinyapp_components - Shiny 應用組件 {#sec-10-rshinyapp-components}

**模組功能**: Shiny 應用程式的 UI 和伺服器組件

#### 待建立文檔
- Macro 組件函數
- Micro 組件函數
- UI-Server-Defaults 三元組件

### 16_NSQL_Language - NSQL 語言框架 {#sec-16-nsql-language}

**模組功能**: 自然語言到 SQL 的翻譯框架

#### 待建立文檔
- NSQL 核心翻譯函數
- 查詢優化工具
- 語言解析器

### 18_AIMETA_Language - AIMETA 通訊語言 {#sec-18-aimeta-language}

**模組功能**: AI 通訊標準語言和協議

#### 待建立文檔
- AIMETA 通訊協議函數
- 標準化訊息格式
- AI 間通訊工具

### 21_rshinyapp_templates - Shiny 應用模板 {#sec-21-rshinyapp-templates}

**模組功能**: Shiny 應用程式的標準化模板

#### 待建立文檔
- 應用模板生成函數
- 標準化 UI 模板
- 部署配置模板

### 22_initializations - 初始化函數 {#sec-22-initializations}

**模組功能**: 系統和應用程式初始化

#### 待建立文檔
- 系統初始化函數
- 環境設定函數
- 套件載入管理

## 📊 函數統計

### 目前狀態
- **已建立文檔**: 1 個函數
- **待建立文檔**: 約 50+ 個函數
- **模組覆蓋率**: 1/11 (9.1%)

### 優先順序
1. **高優先級**: 核心資料庫函數 (02_db_utils)
2. **中優先級**: AI 整合函數 (08_ai)
3. **低優先級**: 模板和初始化函數

## 🔄 維護指南

### 新增函數文檔流程
1. 在對應的 `FN/XX_module/` 資料夾建立 `.qmd` 文件
2. 在此 INDEX.qmd 中添加函數連結
3. 在原始模組資料夾建立符號連結
4. 更新函數統計資訊

### 文檔命名規範
- 檔案名：`FN_{function_name}_{brief_description}.qmd`
- 標題：函數名稱和簡短描述
- 分類：Functions, 模組名稱, 功能類別

### 符號連結建立
```bash
# 在模組資料夾中建立連結
cd scripts/global_scripts/XX_module/
ln -s ../../00_principles/principles_qmd/FN/XX_module/FN_function_name.qmd README.md
```

## 🎯 相關原則

### 遵循的 WISER 原則
- **R21**: One Function One File - 每個函數獨立文檔
- **R69**: Function File Naming - 函數檔案命名規範
- **MP44**: Functor-Module Correspondence - 函數與模組對應

### 文檔標準
- 完整的功能描述和用法範例
- 清楚的參數說明和返回值
- 相關原則的明確標註
- 實際使用場景的範例程式碼

---

*此索引會隨著新函數文檔的建立而持續更新。最後更新：2025-07-16*

## 📝 更新記錄

### 2025-07-16
- ✅ 建立 FN 資料夾架構
- ✅ 完成 tbl2() 函數文檔
- ✅ 建立函數總目錄結構
- 🔄 開始建立符號連結系統