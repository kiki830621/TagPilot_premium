---
description: 
globs: 
alwaysApply: true
---
# R 函數使用前驗證規則

## 🚨 強制性要求：函數驗證

在編寫任何 R 代碼前，**必須**先驗證所有使用的函數確實存在。

### ✅ 驗證方法

1. **使用 `?` 查詢函數文檔**
   ```r
   ?names       # 確認 names() 函數存在
   ?formals     # 確認 formals() 函數存在
   ?dplyr::filter  # 確認 package 中的函數
   ```

2. **使用 `??` 搜尋函數**
   ```r
   ??make_clean_names  # 搜尋相關函數
   ```

3. **使用 `exists()` 檢查自定義函數**
   ```r
   if (!exists("my_custom_function")) {
     warning("Function not found")
   }
   ```

### ❌ 常見錯誤範例

- **錯誤**: `names(formals(func))` 假設語法正確
- **正確**: 先用 `?names` 和 `?formals` 確認語法

### 🎯 檢查清單

每次使用函數前必須確認：
- [ ] 函數名稱拼寫正確
- [ ] 函數存在於預期的 package 中  
- [ ] 參數名稱和語法正確
- [ ] 避免使用不存在的屬性或方法

### 📚 Package 函數驗證

使用 package 函數時特別注意：
```r
# 確認 package 已載入且函數存在
?janitor::make_clean_names
?dplyr::filter
?shiny::reactive
```

## ⚠️ 這是強制性規則，不可忽略！

任何時候編寫 R 代碼，都必須先驗證函數存在，避免語法錯誤和運行時錯誤。
