---
description: 
globs: 
alwaysApply: true
---
# R Function Validation Rules

## 參考資源
- 最新的 R packages GitHub 備份保存在：`update_scripts/global_scripts/20_R_packages/`
- 如需查詢特定函數的可用性或包資訊，可參考該目錄中的 GitHub 文件

## 強制性原則
在編寫 R 代碼時，使用任何函數前都應該先確認該函數確實存在，這是**強制性規則**。

## 驗證方法

### 1. 使用 `?` 查詢函數文檔
```r
# 檢查函數是否存在並查看其文檔
?function_name
```

### 2. 使用 `??` 搜尋函數
```r
# 在所有已加載的包中搜尋函數
??function_name
```

### 3. 使用 `exists()` 檢查自定義函數
```r
# 檢查函數是否在當前環境中存在
exists("function_name")
```

### 4. 確認 package 函數的可用性
```r
# 檢查包是否已加載
"package:dplyr" %in% search()

# 檢查包中的函數是否可用
exists("filter", where = "package:dplyr")
```

## 錯誤範例
```r
# ❌ 錯誤：直接使用 names(formals(func)) 而未驗證 formals 函數
names(formals(func))

# ✅ 正確：先驗證函數存在
if (exists("formals")) {
  names(formals(func))
} else {
  stop("formals function not available")
}
```

## 目的
這些驗證步驟可以避免：
- 語法錯誤
- 運行時錯誤
- 函數不存在的問題
- 包未加載的問題

## 適用範圍
此規則適用於所有 R 代碼編寫，包括但不限於：
- Shiny 應用程式
- 數據分析腳本
- 函數定義
- 模組開發
